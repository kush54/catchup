{"ast":null,"code":"class PeerService {\n  constructor() {\n    this.initializePeer();\n  }\n  initializePeer() {\n    if (!this.peer) {\n      this.peer = new RTCPeerConnection({\n        iceServers: [{\n          urls: [\"stun:stun.l.google.com:19302\", \"stun:global.stun.twilio.com:3478\"]\n        }]\n      });\n\n      // Add event listeners for state changes\n      this.peer.addEventListener(\"iceconnectionstatechange\", () => {\n        console.log(`ICE connection state: ${this.peer.iceConnectionState}`);\n      });\n      this.peer.addEventListener(\"signalingstatechange\", () => {\n        console.log(`Signaling state: ${this.peer.signalingState}`);\n      });\n      this.peer.addEventListener(\"connectionstatechange\", () => {\n        console.log(`Connection state: ${this.peer.connectionState}`);\n      });\n    }\n  }\n  async getAnswer(offer) {\n    if (offer) {\n      if (this.peer) {\n        await this.peer.setRemoteDescription(offer);\n        const ans = await this.peer.createAnswer();\n        await this.peer.setLocalDescription(new RTCSessionDescription(ans));\n        return ans;\n      }\n    }\n    return null;\n  }\n  async setLocalDescription(ans) {\n    if (this.peer && ans) {\n      await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\n    }\n  }\n  async getOffer() {\n    if (this.peer) {\n      const offer = await this.peer.createOffer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(offer));\n      return offer;\n    }\n    return null;\n  }\n  closeConnection() {\n    if (this.peer) {\n      this.peer.getSenders().forEach(sender => {\n        if (sender.track) {\n          sender.track.stop();\n        }\n      });\n      this.peer.getReceivers().forEach(receiver => {\n        if (receiver.track) {\n          receiver.track.stop();\n        }\n      });\n      this.peer.close();\n      this.peer = null;\n    }\n  }\n}\nexport default new PeerService();","map":{"version":3,"names":["PeerService","constructor","initializePeer","peer","RTCPeerConnection","iceServers","urls","addEventListener","console","log","iceConnectionState","signalingState","connectionState","getAnswer","offer","setRemoteDescription","ans","createAnswer","setLocalDescription","RTCSessionDescription","getOffer","createOffer","closeConnection","getSenders","forEach","sender","track","stop","getReceivers","receiver","close"],"sources":["C:/Users/kuljeet/Desktop/catchup-final/client/my-app/src/features/Functions/Peer.js"],"sourcesContent":["class PeerService {\r\n  constructor() {\r\n    this.initializePeer();\r\n  }\r\n\r\n  initializePeer() {\r\n    if (!this.peer) {\r\n      this.peer = new RTCPeerConnection({\r\n        iceServers: [\r\n          {\r\n            urls: [\r\n              \"stun:stun.l.google.com:19302\",\r\n              \"stun:global.stun.twilio.com:3478\",\r\n            ],\r\n          },\r\n        ],\r\n      });\r\n\r\n      // Add event listeners for state changes\r\n      this.peer.addEventListener(\"iceconnectionstatechange\", () => {\r\n        console.log(`ICE connection state: ${this.peer.iceConnectionState}`);\r\n      });\r\n\r\n      this.peer.addEventListener(\"signalingstatechange\", () => {\r\n        console.log(`Signaling state: ${this.peer.signalingState}`);\r\n      });\r\n\r\n      this.peer.addEventListener(\"connectionstatechange\", () => {\r\n        console.log(`Connection state: ${this.peer.connectionState}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getAnswer(offer) {\r\n    if (offer) {\r\n      if (this.peer) {\r\n        await this.peer.setRemoteDescription(offer);\r\n        const ans = await this.peer.createAnswer();\r\n        await this.peer.setLocalDescription(new RTCSessionDescription(ans));\r\n        return ans;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async setLocalDescription(ans) {\r\n    if (this.peer && ans) {\r\n      await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\r\n    }\r\n  }\r\n\r\n  async getOffer() {\r\n    if (this.peer) {\r\n      const offer = await this.peer.createOffer();\r\n      await this.peer.setLocalDescription(new RTCSessionDescription(offer));\r\n      return offer;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  closeConnection() {\r\n    if (this.peer) {\r\n      this.peer.getSenders().forEach((sender) => {\r\n        if (sender.track) {\r\n          sender.track.stop();\r\n        }\r\n      });\r\n\r\n      this.peer.getReceivers().forEach((receiver) => {\r\n        if (receiver.track) {\r\n          receiver.track.stop();\r\n        }\r\n      });\r\n\r\n      this.peer.close();\r\n      this.peer = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new PeerService();\r\n"],"mappings":"AAAA,MAAMA,WAAW,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB;EAEAA,cAAcA,CAAA,EAAG;IACf,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE;MACd,IAAI,CAACA,IAAI,GAAG,IAAIC,iBAAiB,CAAC;QAChCC,UAAU,EAAE,CACV;UACEC,IAAI,EAAE,CACJ,8BAA8B,EAC9B,kCAAkC;QAEtC,CAAC;MAEL,CAAC,CAAC;;MAEF;MACA,IAAI,CAACH,IAAI,CAACI,gBAAgB,CAAC,0BAA0B,EAAE,MAAM;QAC3DC,OAAO,CAACC,GAAG,CAAC,yBAAyB,IAAI,CAACN,IAAI,CAACO,kBAAkB,EAAE,CAAC;MACtE,CAAC,CAAC;MAEF,IAAI,CAACP,IAAI,CAACI,gBAAgB,CAAC,sBAAsB,EAAE,MAAM;QACvDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,IAAI,CAACN,IAAI,CAACQ,cAAc,EAAE,CAAC;MAC7D,CAAC,CAAC;MAEF,IAAI,CAACR,IAAI,CAACI,gBAAgB,CAAC,uBAAuB,EAAE,MAAM;QACxDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,IAAI,CAACN,IAAI,CAACS,eAAe,EAAE,CAAC;MAC/D,CAAC,CAAC;IACJ;EACF;EAEA,MAAMC,SAASA,CAACC,KAAK,EAAE;IACrB,IAAIA,KAAK,EAAE;MACT,IAAI,IAAI,CAACX,IAAI,EAAE;QACb,MAAM,IAAI,CAACA,IAAI,CAACY,oBAAoB,CAACD,KAAK,CAAC;QAC3C,MAAME,GAAG,GAAG,MAAM,IAAI,CAACb,IAAI,CAACc,YAAY,CAAC,CAAC;QAC1C,MAAM,IAAI,CAACd,IAAI,CAACe,mBAAmB,CAAC,IAAIC,qBAAqB,CAACH,GAAG,CAAC,CAAC;QACnE,OAAOA,GAAG;MACZ;IACF;IACA,OAAO,IAAI;EACb;EAEA,MAAME,mBAAmBA,CAACF,GAAG,EAAE;IAC7B,IAAI,IAAI,CAACb,IAAI,IAAIa,GAAG,EAAE;MACpB,MAAM,IAAI,CAACb,IAAI,CAACY,oBAAoB,CAAC,IAAII,qBAAqB,CAACH,GAAG,CAAC,CAAC;IACtE;EACF;EAEA,MAAMI,QAAQA,CAAA,EAAG;IACf,IAAI,IAAI,CAACjB,IAAI,EAAE;MACb,MAAMW,KAAK,GAAG,MAAM,IAAI,CAACX,IAAI,CAACkB,WAAW,CAAC,CAAC;MAC3C,MAAM,IAAI,CAAClB,IAAI,CAACe,mBAAmB,CAAC,IAAIC,qBAAqB,CAACL,KAAK,CAAC,CAAC;MACrE,OAAOA,KAAK;IACd;IACA,OAAO,IAAI;EACb;EAEAQ,eAAeA,CAAA,EAAG;IAChB,IAAI,IAAI,CAACnB,IAAI,EAAE;MACb,IAAI,CAACA,IAAI,CAACoB,UAAU,CAAC,CAAC,CAACC,OAAO,CAAEC,MAAM,IAAK;QACzC,IAAIA,MAAM,CAACC,KAAK,EAAE;UAChBD,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;QACrB;MACF,CAAC,CAAC;MAEF,IAAI,CAACxB,IAAI,CAACyB,YAAY,CAAC,CAAC,CAACJ,OAAO,CAAEK,QAAQ,IAAK;QAC7C,IAAIA,QAAQ,CAACH,KAAK,EAAE;UAClBG,QAAQ,CAACH,KAAK,CAACC,IAAI,CAAC,CAAC;QACvB;MACF,CAAC,CAAC;MAEF,IAAI,CAACxB,IAAI,CAAC2B,KAAK,CAAC,CAAC;MACjB,IAAI,CAAC3B,IAAI,GAAG,IAAI;IAClB;EACF;AACF;AAEA,eAAe,IAAIH,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}