{"ast":null,"code":"class PeerService{constructor(){this.initializePeer();}initializePeer(){if(!this.peer){this.peer=new RTCPeerConnection({iceServers:[{urls:[\"stun:stun.l.google.com:19302\",\"stun:global.stun.twilio.com:3478\"]}]});// Add event listeners for state changes\nthis.peer.addEventListener(\"iceconnectionstatechange\",()=>{console.log(\"ICE connection state: \".concat(this.peer.iceConnectionState));});this.peer.addEventListener(\"signalingstatechange\",()=>{console.log(\"Signaling state: \".concat(this.peer.signalingState));});this.peer.addEventListener(\"connectionstatechange\",()=>{console.log(\"Connection state: \".concat(this.peer.connectionState));});}}async getAnswer(offer){if(offer){if(this.peer){await this.peer.setRemoteDescription(offer);const ans=await this.peer.createAnswer();await this.peer.setLocalDescription(new RTCSessionDescription(ans));return ans;}}return null;}async setLocalDescription(ans){if(this.peer&&ans){await this.peer.setRemoteDescription(new RTCSessionDescription(ans));}}async getOffer(){if(this.peer){const offer=await this.peer.createOffer();await this.peer.setLocalDescription(new RTCSessionDescription(offer));return offer;}return null;}closeConnection(){if(this.peer){this.peer.getSenders().forEach(sender=>{if(sender.track){sender.track.stop();}});this.peer.getReceivers().forEach(receiver=>{if(receiver.track){receiver.track.stop();}});this.peer.close();this.peer=null;}}}export default new PeerService();","map":{"version":3,"names":["PeerService","constructor","initializePeer","peer","RTCPeerConnection","iceServers","urls","addEventListener","console","log","concat","iceConnectionState","signalingState","connectionState","getAnswer","offer","setRemoteDescription","ans","createAnswer","setLocalDescription","RTCSessionDescription","getOffer","createOffer","closeConnection","getSenders","forEach","sender","track","stop","getReceivers","receiver","close"],"sources":["C:/Users/kuljeet/Desktop/catchup-final/client/my-app/src/features/Functions/Peer.js"],"sourcesContent":["class PeerService {\r\n  constructor() {\r\n    this.initializePeer();\r\n  }\r\n\r\n  initializePeer() {\r\n    if (!this.peer) {\r\n      this.peer = new RTCPeerConnection({\r\n        iceServers: [\r\n          {\r\n            urls: [\r\n              \"stun:stun.l.google.com:19302\",\r\n              \"stun:global.stun.twilio.com:3478\",\r\n            ],\r\n          },\r\n        ],\r\n      });\r\n\r\n      // Add event listeners for state changes\r\n      this.peer.addEventListener(\"iceconnectionstatechange\", () => {\r\n        console.log(`ICE connection state: ${this.peer.iceConnectionState}`);\r\n      });\r\n\r\n      this.peer.addEventListener(\"signalingstatechange\", () => {\r\n        console.log(`Signaling state: ${this.peer.signalingState}`);\r\n      });\r\n\r\n      this.peer.addEventListener(\"connectionstatechange\", () => {\r\n        console.log(`Connection state: ${this.peer.connectionState}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getAnswer(offer) {\r\n    if (offer) {\r\n      if (this.peer) {\r\n        await this.peer.setRemoteDescription(offer);\r\n        const ans = await this.peer.createAnswer();\r\n        await this.peer.setLocalDescription(new RTCSessionDescription(ans));\r\n        return ans;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async setLocalDescription(ans) {\r\n    if (this.peer && ans) {\r\n      await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\r\n    }\r\n  }\r\n\r\n  async getOffer() {\r\n    if (this.peer) {\r\n      const offer = await this.peer.createOffer();\r\n      await this.peer.setLocalDescription(new RTCSessionDescription(offer));\r\n      return offer;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  closeConnection() {\r\n    if (this.peer) {\r\n      this.peer.getSenders().forEach((sender) => {\r\n        if (sender.track) {\r\n          sender.track.stop();\r\n        }\r\n      });\r\n\r\n      this.peer.getReceivers().forEach((receiver) => {\r\n        if (receiver.track) {\r\n          receiver.track.stop();\r\n        }\r\n      });\r\n\r\n      this.peer.close();\r\n      this.peer = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new PeerService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}